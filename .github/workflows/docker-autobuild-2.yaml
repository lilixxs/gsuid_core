# 自动构建 docker 镜像
name: Docker Build and Compose -> Alibaba ACR

# 参数配置为环境变量
env:
  # tag_prefix 软件包名称，通常为 docker hub 用户名/软件包名称
  # tag_version docker 包版本，后续要实现自动打（可能得加 actions 里边的插件）
  # dockerfile_path Dockerfile 路径
  # build_branch 构建分支
  tag_prefix: "lilixxs666/gsuid-core"
  tag_version: "dev"
  dockerfile_path: "Dockerfile"
  build_branch: "master"
  # 其他要指定的变量 DOCKER_USERNAME 和 DOCKER_PASSWORD 需要在仓库的 设置 --> secrets 里边配置
  # DOCKER_USERNAME = docker hub 用户名
  # DOCKER_PASSWORD = docker hub 密码

on:
  # 定时执行：每半天（12小时）执行一次
  # schedule:
  #   - cron:  '0 */12 * * *'
  # 按键手动触发
  workflow_dispatch:
    inputs:
      need_push:
        description: '是否推送到dockerhub...'
        type: boolean
        default: true


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.build_branch }}


      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create Docker meta
        id: docker_img_meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.tag_prefix }},enable=true
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=dev-{{date 'YYYYMMDD'}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ env.need_push == true }}
          tags: |
            ${{ steps.docker_img_meta.outputs.tags }}


      - name: prepare messages for feishu sending
        run: |
          echo "
          msg_type: post
          content:
            post:
              zh_cn:
                title: 🤖 Github CI/CD 结果
                content:
                - - tag: text
                    text: '工作流：'
                  - tag: text
                    text: ${{ github.workflow }}
                - - tag: text
                    text: '仓库：'
                  - tag: text
                    text: ${{ github.repository }}
                - - tag: text
                    text: '触发事件：'
                  - tag: text
                    text: ${{ github.event_name }}
                - - tag: text
                    text: '--------------------------'
                - - tag: text
                    text: '执行结果'
                  - tag: text
                    text: ${{ github.action_status }}
          " > msg.yaml
          echo msg.yaml

      - name: convert msg from yaml to json
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.16.2/yq_linux_amd64 \
          && chmod +x yq_linux_amd64 \
          && mv yq_linux_amd64 /usr/local/bin/yq
          yq eval -o json msg.yaml |tee msg.json
          echo "MSG_JSON=$(cat msg.json)" >> $GITHUB_ENV

      - name: send messages to feishu
        uses: Rollingegg/feishu-robot-action@v1
        with:
          version: 2
          uuid: ${{ secrets.FEISHU_BOT_WEBSOCKET_ENDPOINT }}
          secret: ${{ secrets.FEISHU_BOT_AUTHKEY }}
          json: |
            ${{ env.MSG_JSON }}

